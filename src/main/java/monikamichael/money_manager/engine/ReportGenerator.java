package monikamichael.money_manager.engine;

import java.io.PrintWriter;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

public class ReportGenerator {
    private static void writeMonthData(final PrintWriter writer,
                                       final int year, final int month, final MonthData data) {
        writer.println("<h3 class=\"month-header\">" + Month.fromInt(month) + " " + year + "</h3>");
        writer.println("<p><table class=\"container\">");

        writeTableHeader(writer, new String[]{"account", " beginning", "end", "balance"});
        writeTableRow(writer, new String[] {
                "main",
                Currency.toString(data.accountBegin),
                Currency.toString(data.accountEnd),
                Currency.toString(data.accountEnd - data.accountBegin)
        });

        writeTableRow(writer, new String[] {
                "wallet",
                Currency.toString(data.walletBegin),
                Currency.toString(data.walletEnd),
                Currency.toString(data.walletEnd - data.walletBegin)
        });

        writeTableRow(writer, new String[] {
                "PayPal",
                Currency.toString(data.payPalBegin),
                Currency.toString(data.payPalEnd),
                Currency.toString(data.payPalEnd - data.payPalBegin)
        });

        writeTableRow(writer, new String[] {
                "TOTAL",
                Currency.toString(data.totalBegin()),
                Currency.toString(data.totalEnd()),
                Currency.toString(data.totalEnd() - data.totalBegin())
        });

        writer.println("</table></p>");

        writer.println("<p><table class=\"container\">");

        writeTableRow(writer, new String[] {
                "<b>After previous month</b>", Currency.toString(data.afterPreviousMonth)
        });
        writeTableRow(writer, new String[] {
                "<b>Salary</b>", Currency.toString(data.salary)
        });
        writeTableRow(writer, new String[] {
                "<b>Food expenses</b>", Currency.toString(data.foodExpenses())
        });
        writeTableRow(writer, new String[] {
                "<b>Balance</b>", Currency.toString(data.balance())
        });


        writeExpandingList(writer, month, data.ownExpenses, "Own Expenses");
        writeExpandingList(writer, month, data.periodicExpenses, "Periodic Expenses");
        writeExpandingList(writer, month, data.otherExpenses, "Other Expenses");
        writeExpandingList(writer, month, data.outOfBudgetExpenses, "Out-of-budget expense");
        writeExpandingList(writer, month, data.debts, "Debts");
        writeExpandingList(writer, month, data.transfersFromSavings, "Transfers from savings");

        writer.println("</table></p>");
    }

    public static void forOneMonth(final Database db, final PrintWriter writer,
                                   final int month, final int year) {
        writer.println("<html>");
        writer.println("  <head>");
        writer.println("    <title>Financial report</title>");
        writer.println("    <link rel=\"stylesheet\" type=\"text/css\" href=\"src/main/resources/main.css\">");
        writer.println("  </head>");
        writer.println("  <body>");

        writer.println("    <h1>Financial report</h1>");
        writer.println("    <h4>");
        writer.println("      Report generated by Money Manager for one specified month.");
        writer.println("    </h4>");

        MonthData data = MonthData.retrieveForMonth(db, year, month);
        writeMonthData(writer, year, month, data);

        writer.println("  </body>");
        writer.println("<h2>Created with love by <a href=\"http://pablogarciafernandez.com\" target=\"_blank\">Pablo García Fernández</a></h2>");
        writer.println("</html>");
    }

    public static void forAllMonths(final Database db, final PrintWriter writer) {
        writer.println("<html>");
        writer.println("  <head>");
        writer.println("    <title>Financial report</title>");
        writer.println("    <link rel=\"stylesheet\" type=\"text/css\" href=\"src/main/resources/main.css\">");
        writer.println("  </head>");
        writer.println("  <body>");

        writer.println("    <h1>Financial report</h1>");
        writer.println("    <h4>");
        writer.println("      Report generated by Money Manager for every month");
        writer.println("      included in the database.");
        writer.println("    </h4>");
        db.executeSqlQuery("SELECT YEAR, MONTH FROM MONTHS ORDER BY YEAR DESC, MONTH DESC", new SqlQueryClient() {
            @Override
            public void onStatementReady(PreparedStatement statement) throws SQLException {
            }

            @Override
            public void onResult(ResultSet resultSet) throws SQLException {
                boolean first = true;
                while (resultSet.next()) {
                    int year = resultSet.getInt("YEAR");
                    int month = resultSet.getInt("MONTH");

                    if (first) {
                        // Also print information about the next month (first not included in the database)
                        int nextMonthYear = year;
                        int nextMonthMonth = month + 1;
                        if (nextMonthMonth > 12) {
                            nextMonthMonth = 1;
                            ++nextMonthYear;
                        }
                        MonthData data = MonthData.retrieveForMonth(db, nextMonthYear, nextMonthMonth);
                        writeMonthData(writer, nextMonthYear, nextMonthMonth, data);

                        first = false;
                    }

                    MonthData data = MonthData.retrieveForMonth(db, year, month);
                    writeMonthData(writer, year, month, data);
                }
            }
        });
        writer.println("  </body>");
        writer.println("<h2>Created with love by <a href=\"http://pablogarciafernandez.com\" target=\"_blank\">Pablo García Fernández</a></h2>");
        writer.println("</html>");
    }

    private static void writeTableHeader(PrintWriter writer, String[] heading) {
        writer.println("<thead>");
        writer.println("  <tr>");
        for (String column : heading) {
            writer.println("<th>" + column + "</th>");
        }
        writer.println("  </tr>");
        writer.println("<thead>");
    }

    private static void writeTableRow(PrintWriter writer, String[] cells) {
        writer.println("  <tr>");
        for (String cell : cells) {
            writer.println("<td>" + cell + "</td>");
        }
        writer.println("  </tr>");
    }

    private static  void writeExpandingList(PrintWriter writer, int month, List<Entry> data, String uniqueId) {
        writer.println("<tr><p><td>" +
                "<input class=\"toggle\" id=\"toggle" + uniqueId + Month.fromInt(month)  +  "\" type=\"checkbox\">" +
                "<label for=\"toggle" + uniqueId + Month.fromInt(month) + "\"><b>"+uniqueId +"</b></label>" +
                "<div class=\"expand\">" +
                "    <section>" +
                "<p><table class=\"container\">");
        for (Entry entry : data) {
            writer.println("<tr>" +
                    "<td>" + entry.description + "</td>" +
                    "<td>" + Currency.toString(entry.value) + "</td>" +
                    "<td>" + entry.category + "</td>" +
                    "</tr>");
        }
        writer.println("</table></p> </section></div></td></p></tr>");
    }

}
